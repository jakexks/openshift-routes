name: GoReleaser

on:
  pull_request:
  push:
    tags:
      - "*"

permissions:
  contents: write # needed to update the data of a release
  packages: write # needed to push to GHCR
  id-token: write # needed for Google Cloud auth

env:
  KMS_KEY: "gcpkms://projects/jetstack-jake-sanders/locations/global/keyRings/testring/cryptoKeys/sha512key/versions/1"
  GCP_WORKLOAD_IDENTITY_PROVIDER: 'projects/834553570636/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
  GCP_SERVICE_ACCOUNT: 'github-actions@jetstack-jake-sanders.iam.gserviceaccount.com'

jobs:
  goreleaser:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --force --tags
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "^1.18"
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser (PR)
        uses: goreleaser/goreleaser-action@v2
        if: "!startsWith(github.ref, 'refs/tags')" # runs on a PR
        with:
          distribution: goreleaser
          version: latest
          args: release --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Google Cloud auth
        uses: google-github-actions/auth@v0.7.3
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
      - name: Install cosign
        uses: sigstore/cosign-installer@536b37ec5d5b543420bdfd9b744c5965bd4d8730

      - name: Run GoReleaser (Publish Release)
        uses: goreleaser/goreleaser-action@v2
        if: "startsWith(github.ref, 'refs/tags')" # runs on a Tag being pushed
        with:
          distribution: goreleaser
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
